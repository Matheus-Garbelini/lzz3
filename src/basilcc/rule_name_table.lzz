namespace basilcc
{
  class RuleNameTable : public Table
  {
  public:
    RuleNameTable ()
    {}
    ~ RuleNameTable ()
    {
      deleteObjects (m_rule_names.begin (), m_rule_names.end ());
    }

    // get rule name, always allocates new rule name
    RuleNamePtr getRuleName (Ident name, Loc const & loc, bool is_node, Ident cap_string)
    {
      return * m_rule_names.insert (m_rule_names.end (), new RuleName (name, loc, is_node, cap_string));
    }

    enum { TABLE = TABLE_RULE_NAME }
  private:
    RuleNamePtrVector m_rule_names;
  }
}

#hdr
#include <basilcc/rule_name_ptr_vector.h>
#include <basilcc/table.h>
#include <util/ident.h>
#include <util/loc.h>
#end

#src
#include <basilcc/rule_name.h>
#include <basilcc/util.h>
#end
